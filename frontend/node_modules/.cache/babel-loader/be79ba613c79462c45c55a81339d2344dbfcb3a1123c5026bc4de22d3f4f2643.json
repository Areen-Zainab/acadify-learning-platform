{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hafsa\\\\source\\\\repos\\\\web-project\\\\frontend\\\\src\\\\components\\\\teacher\\\\create\\\\CourseStructureBuilder.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { Plus } from \"lucide-react\";\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\nimport Module from \"../../Module\";\nimport LessonModal from \"../LessonModal\";\nimport \"../../../css/teacher/create/StructureBuilder.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StructureBuilder = () => {\n  _s();\n  const [modules, setModules] = useState([{\n    id: \"module-1\",\n    title: \"Introduction to the Course\",\n    description: \"Overview of what to expect in this course\",\n    isOpen: true,\n    lessons: [{\n      id: \"lesson-1-1\",\n      title: \"Welcome & Course Overview\",\n      duration: \"10 min\"\n    }, {\n      id: \"lesson-1-2\",\n      title: \"How to Use This Platform\",\n      duration: \"5 min\"\n    }]\n  }, {\n    id: \"module-2\",\n    title: \"Getting Started\",\n    description: \"Fundamental concepts and tools setup\",\n    isOpen: false,\n    lessons: [{\n      id: \"lesson-2-1\",\n      title: \"Installation Guide\",\n      duration: \"15 min\"\n    }, {\n      id: \"lesson-2-2\",\n      title: \"First Steps\",\n      duration: \"20 min\"\n    }]\n  }]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentLesson, setCurrentLesson] = useState(null);\n  const [currentModuleId, setCurrentModuleId] = useState(null);\n  const nextModuleId = useRef(modules.length + 1);\n  const nextLessonIds = useRef({});\n\n  // Initialize nextLessonIds for existing modules\n  modules.forEach(module => {\n    if (!nextLessonIds.current[module.id]) {\n      nextLessonIds.current[module.id] = module.lessons.length + 1;\n    }\n  });\n  const toggleModule = moduleId => {\n    setModules(modules.map(module => module.id === moduleId ? {\n      ...module,\n      isOpen: !module.isOpen\n    } : module));\n  };\n  const addNewModule = () => {\n    const newModuleId = `module-${nextModuleId.current}`;\n    nextModuleId.current += 1;\n    nextLessonIds.current[newModuleId] = 1;\n    const newModule = {\n      id: newModuleId,\n      title: \"New Module\",\n      description: \"Module description\",\n      isOpen: true,\n      lessons: []\n    };\n    setModules([...modules, newModule]);\n  };\n  const deleteModule = moduleId => {\n    setModules(modules.filter(module => module.id !== moduleId));\n  };\n  const editModule = (moduleId, field, value) => {\n    setModules(modules.map(module => module.id === moduleId ? {\n      ...module,\n      [field]: value\n    } : module));\n  };\n  const addLesson = moduleId => {\n    setCurrentLesson({\n      id: \"\",\n      title: \"\",\n      duration: \"\"\n    });\n    setCurrentModuleId(moduleId);\n    setIsModalOpen(true);\n  };\n  const editLesson = (lesson, moduleId) => {\n    setCurrentLesson({\n      ...lesson\n    });\n    setCurrentModuleId(moduleId);\n    setIsModalOpen(true);\n  };\n  const deleteLesson = (lessonId, moduleId) => {\n    setModules(modules.map(module => module.id === moduleId ? {\n      ...module,\n      lessons: module.lessons.filter(lesson => lesson.id !== lessonId)\n    } : module));\n  };\n  const saveLesson = lesson => {\n    if (!currentLesson.id) {\n      // Add new lesson\n      const newLessonId = `lesson-${currentModuleId.split('-')[1]}-${nextLessonIds.current[currentModuleId]}`;\n      nextLessonIds.current[currentModuleId] += 1;\n      setModules(modules.map(module => module.id === currentModuleId ? {\n        ...module,\n        lessons: [...module.lessons, {\n          ...lesson,\n          id: newLessonId\n        }]\n      } : module));\n    } else {\n      // Update existing lesson\n      setModules(modules.map(module => module.id === currentModuleId ? {\n        ...module,\n        lessons: module.lessons.map(l => l.id === lesson.id ? lesson : l)\n      } : module));\n    }\n    setIsModalOpen(false);\n  };\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source,\n      type\n    } = result;\n\n    // If dropped outside a droppable area or at the same spot\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n\n    // Handle module reordering\n    if (type === 'MODULE') {\n      const reorderedModules = Array.from(modules);\n      const [removed] = reorderedModules.splice(source.index, 1);\n      reorderedModules.splice(destination.index, 0, removed);\n      setModules(reorderedModules);\n      return;\n    }\n\n    // Handle lesson reordering\n    if (type === 'LESSON') {\n      const sourceModuleId = source.droppableId;\n      const destModuleId = destination.droppableId;\n\n      // Create a new modules array to avoid direct state mutation\n      const newModules = [...modules];\n\n      // Find the source and destination modules\n      const sourceModule = newModules.find(m => m.id === sourceModuleId);\n      const destModule = newModules.find(m => m.id === destModuleId);\n\n      // Copy the lessons arrays\n      const sourceLessons = [...sourceModule.lessons];\n      const destLessons = sourceModuleId === destModuleId ? sourceLessons : [...destModule.lessons];\n\n      // Remove the lesson from source and add to destination\n      const [movedLesson] = sourceLessons.splice(source.index, 1);\n      if (sourceModuleId === destModuleId) {\n        // If within the same module\n        sourceLessons.splice(destination.index, 0, movedLesson);\n        sourceModule.lessons = sourceLessons;\n      } else {\n        // If between different modules\n        destLessons.splice(destination.index, 0, movedLesson);\n        sourceModule.lessons = sourceLessons;\n        destModule.lessons = destLessons;\n      }\n      setModules(newModules);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"structure-builder\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"structure-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"structure-title\",\n        children: \"Course Structure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"structure-subtitle\",\n        children: \"Build your course by adding modules and lessons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"modules\",\n        type: \"MODULE\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"structure-content\",\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          children: [modules.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: \"No modules yet. Add your first module to get started.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 17\n          }, this) : modules.map((module, moduleIndex) => /*#__PURE__*/_jsxDEV(Module, {\n            module: module,\n            moduleIndex: moduleIndex,\n            onToggleModule: toggleModule,\n            onEditModule: editModule,\n            onDeleteModule: deleteModule,\n            onAddLesson: addLesson,\n            onEditLesson: editLesson,\n            onDeleteLesson: deleteLesson\n          }, module.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addNewModule,\n            className: \"btn-add-module\",\n            children: [/*#__PURE__*/_jsxDEV(Plus, {\n              className: \"icon-plus\",\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), \"Add New Module\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(LessonModal, {\n      currentLesson: currentLesson,\n      onSave: saveLesson,\n      onClose: () => setIsModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n};\n_s(StructureBuilder, \"qdcRjwa5on1xfw6pZM4rp4QIQ70=\");\n_c = StructureBuilder;\nexport default StructureBuilder;\nvar _c;\n$RefreshReg$(_c, \"StructureBuilder\");","map":{"version":3,"names":["React","useState","useRef","Plus","DragDropContext","Droppable","Module","LessonModal","jsxDEV","_jsxDEV","StructureBuilder","_s","modules","setModules","id","title","description","isOpen","lessons","duration","isModalOpen","setIsModalOpen","currentLesson","setCurrentLesson","currentModuleId","setCurrentModuleId","nextModuleId","length","nextLessonIds","forEach","module","current","toggleModule","moduleId","map","addNewModule","newModuleId","newModule","deleteModule","filter","editModule","field","value","addLesson","editLesson","lesson","deleteLesson","lessonId","saveLesson","newLessonId","split","l","handleDragEnd","result","destination","source","type","droppableId","index","reorderedModules","Array","from","removed","splice","sourceModuleId","destModuleId","newModules","sourceModule","find","m","destModule","sourceLessons","destLessons","movedLesson","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onDragEnd","provided","droppableProps","ref","innerRef","moduleIndex","onToggleModule","onEditModule","onDeleteModule","onAddLesson","onEditLesson","onDeleteLesson","placeholder","onClick","size","onSave","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Hafsa/source/repos/web-project/frontend/src/components/teacher/create/CourseStructureBuilder.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Plus } from \"lucide-react\";\r\nimport { DragDropContext, Droppable } from '@hello-pangea/dnd';\r\nimport Module from \"../../Module\";\r\nimport LessonModal from \"../LessonModal\";\r\nimport \"../../../css/teacher/create/StructureBuilder.css\";\r\n\r\nconst StructureBuilder = () => {\r\n  const [modules, setModules] = useState([\r\n    {\r\n      id: \"module-1\",\r\n      title: \"Introduction to the Course\",\r\n      description: \"Overview of what to expect in this course\",\r\n      isOpen: true,\r\n      lessons: [\r\n        { id: \"lesson-1-1\", title: \"Welcome & Course Overview\", duration: \"10 min\" },\r\n        { id: \"lesson-1-2\", title: \"How to Use This Platform\", duration: \"5 min\" },\r\n      ]\r\n    },\r\n    {\r\n      id: \"module-2\",\r\n      title: \"Getting Started\",\r\n      description: \"Fundamental concepts and tools setup\",\r\n      isOpen: false,\r\n      lessons: [\r\n        { id: \"lesson-2-1\", title: \"Installation Guide\", duration: \"15 min\" },\r\n        { id: \"lesson-2-2\", title: \"First Steps\", duration: \"20 min\" },\r\n      ]\r\n    }\r\n  ]);\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [currentLesson, setCurrentLesson] = useState(null);\r\n  const [currentModuleId, setCurrentModuleId] = useState(null);\r\n  const nextModuleId = useRef(modules.length + 1);\r\n  const nextLessonIds = useRef({});\r\n  \r\n  // Initialize nextLessonIds for existing modules\r\n  modules.forEach(module => {\r\n    if (!nextLessonIds.current[module.id]) {\r\n      nextLessonIds.current[module.id] = module.lessons.length + 1;\r\n    }\r\n  });\r\n\r\n  const toggleModule = (moduleId) => {\r\n    setModules(modules.map(module => \r\n      module.id === moduleId \r\n        ? { ...module, isOpen: !module.isOpen } \r\n        : module\r\n    ));\r\n  };\r\n\r\n  const addNewModule = () => {\r\n    const newModuleId = `module-${nextModuleId.current}`;\r\n    nextModuleId.current += 1;\r\n    nextLessonIds.current[newModuleId] = 1;\r\n    \r\n    const newModule = {\r\n      id: newModuleId,\r\n      title: \"New Module\",\r\n      description: \"Module description\",\r\n      isOpen: true,\r\n      lessons: []\r\n    };\r\n    \r\n    setModules([...modules, newModule]);\r\n  };\r\n\r\n  const deleteModule = (moduleId) => {\r\n    setModules(modules.filter(module => module.id !== moduleId));\r\n  };\r\n\r\n  const editModule = (moduleId, field, value) => {\r\n    setModules(modules.map(module => \r\n      module.id === moduleId \r\n        ? { ...module, [field]: value } \r\n        : module\r\n    ));\r\n  };\r\n\r\n  const addLesson = (moduleId) => {\r\n    setCurrentLesson({\r\n      id: \"\",\r\n      title: \"\",\r\n      duration: \"\"\r\n    });\r\n    setCurrentModuleId(moduleId);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const editLesson = (lesson, moduleId) => {\r\n    setCurrentLesson({ ...lesson });\r\n    setCurrentModuleId(moduleId);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const deleteLesson = (lessonId, moduleId) => {\r\n    setModules(modules.map(module => \r\n      module.id === moduleId \r\n        ? { \r\n            ...module, \r\n            lessons: module.lessons.filter(lesson => lesson.id !== lessonId) \r\n          } \r\n        : module\r\n    ));\r\n  };\r\n\r\n  const saveLesson = (lesson) => {\r\n    if (!currentLesson.id) {\r\n      // Add new lesson\r\n      const newLessonId = `lesson-${currentModuleId.split('-')[1]}-${nextLessonIds.current[currentModuleId]}`;\r\n      nextLessonIds.current[currentModuleId] += 1;\r\n      \r\n      setModules(modules.map(module => \r\n        module.id === currentModuleId \r\n          ? { \r\n              ...module, \r\n              lessons: [...module.lessons, { ...lesson, id: newLessonId }] \r\n            } \r\n          : module\r\n      ));\r\n    } else {\r\n      // Update existing lesson\r\n      setModules(modules.map(module => \r\n        module.id === currentModuleId \r\n          ? { \r\n              ...module, \r\n              lessons: module.lessons.map(l => \r\n                l.id === lesson.id ? lesson : l\r\n              ) \r\n            } \r\n          : module\r\n      ));\r\n    }\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDragEnd = (result) => {\r\n    const { destination, source, type } = result;\r\n\r\n    // If dropped outside a droppable area or at the same spot\r\n    if (!destination || \r\n        (destination.droppableId === source.droppableId && \r\n         destination.index === source.index)) {\r\n      return;\r\n    }\r\n\r\n    // Handle module reordering\r\n    if (type === 'MODULE') {\r\n      const reorderedModules = Array.from(modules);\r\n      const [removed] = reorderedModules.splice(source.index, 1);\r\n      reorderedModules.splice(destination.index, 0, removed);\r\n      setModules(reorderedModules);\r\n      return;\r\n    }\r\n\r\n    // Handle lesson reordering\r\n    if (type === 'LESSON') {\r\n      const sourceModuleId = source.droppableId;\r\n      const destModuleId = destination.droppableId;\r\n      \r\n      // Create a new modules array to avoid direct state mutation\r\n      const newModules = [...modules];\r\n      \r\n      // Find the source and destination modules\r\n      const sourceModule = newModules.find(m => m.id === sourceModuleId);\r\n      const destModule = newModules.find(m => m.id === destModuleId);\r\n      \r\n      // Copy the lessons arrays\r\n      const sourceLessons = [...sourceModule.lessons];\r\n      const destLessons = sourceModuleId === destModuleId ? \r\n        sourceLessons : [...destModule.lessons];\r\n      \r\n      // Remove the lesson from source and add to destination\r\n      const [movedLesson] = sourceLessons.splice(source.index, 1);\r\n      \r\n      if (sourceModuleId === destModuleId) {\r\n        // If within the same module\r\n        sourceLessons.splice(destination.index, 0, movedLesson);\r\n        sourceModule.lessons = sourceLessons;\r\n      } else {\r\n        // If between different modules\r\n        destLessons.splice(destination.index, 0, movedLesson);\r\n        sourceModule.lessons = sourceLessons;\r\n        destModule.lessons = destLessons;\r\n      }\r\n      \r\n      setModules(newModules);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"structure-builder\">\r\n      <div className=\"structure-header\">\r\n        <h2 className=\"structure-title\">Course Structure</h2>\r\n        <p className=\"structure-subtitle\">Build your course by adding modules and lessons</p>\r\n      </div>\r\n      \r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        <Droppable droppableId=\"modules\" type=\"MODULE\">\r\n          {(provided) => (\r\n            <div \r\n              className=\"structure-content\" \r\n              {...provided.droppableProps}\r\n              ref={provided.innerRef}\r\n            >\r\n              {modules.length === 0 ? (\r\n                <div className=\"empty-state\">\r\n                  No modules yet. Add your first module to get started.\r\n                </div>\r\n              ) : (\r\n                modules.map((module, moduleIndex) => (\r\n                  <Module\r\n                    key={module.id}\r\n                    module={module}\r\n                    moduleIndex={moduleIndex}\r\n                    onToggleModule={toggleModule}\r\n                    onEditModule={editModule}\r\n                    onDeleteModule={deleteModule}\r\n                    onAddLesson={addLesson}\r\n                    onEditLesson={editLesson}\r\n                    onDeleteLesson={deleteLesson}\r\n                  />\r\n                ))\r\n              )}\r\n              {provided.placeholder}\r\n              \r\n              <button\r\n                onClick={addNewModule}\r\n                className=\"btn-add-module\"\r\n              >\r\n                <Plus className=\"icon-plus\" size={20} />\r\n                Add New Module\r\n              </button>\r\n            </div>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n      \r\n      {isModalOpen && (\r\n        <LessonModal \r\n          currentLesson={currentLesson}\r\n          onSave={saveLesson}\r\n          onClose={() => setIsModalOpen(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StructureBuilder;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,IAAI,QAAQ,cAAc;AACnC,SAASC,eAAe,EAAEC,SAAS,QAAQ,mBAAmB;AAC9D,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAO,kDAAkD;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CACrC;IACEa,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,4BAA4B;IACnCC,WAAW,EAAE,2CAA2C;IACxDC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,CACP;MAAEJ,EAAE,EAAE,YAAY;MAAEC,KAAK,EAAE,2BAA2B;MAAEI,QAAQ,EAAE;IAAS,CAAC,EAC5E;MAAEL,EAAE,EAAE,YAAY;MAAEC,KAAK,EAAE,0BAA0B;MAAEI,QAAQ,EAAE;IAAQ,CAAC;EAE9E,CAAC,EACD;IACEL,EAAE,EAAE,UAAU;IACdC,KAAK,EAAE,iBAAiB;IACxBC,WAAW,EAAE,sCAAsC;IACnDC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE,CACP;MAAEJ,EAAE,EAAE,YAAY;MAAEC,KAAK,EAAE,oBAAoB;MAAEI,QAAQ,EAAE;IAAS,CAAC,EACrE;MAAEL,EAAE,EAAE,YAAY;MAAEC,KAAK,EAAE,aAAa;MAAEI,QAAQ,EAAE;IAAS,CAAC;EAElE,CAAC,CACF,CAAC;EAEF,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAMyB,YAAY,GAAGxB,MAAM,CAACU,OAAO,CAACe,MAAM,GAAG,CAAC,CAAC;EAC/C,MAAMC,aAAa,GAAG1B,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACAU,OAAO,CAACiB,OAAO,CAACC,MAAM,IAAI;IACxB,IAAI,CAACF,aAAa,CAACG,OAAO,CAACD,MAAM,CAAChB,EAAE,CAAC,EAAE;MACrCc,aAAa,CAACG,OAAO,CAACD,MAAM,CAAChB,EAAE,CAAC,GAAGgB,MAAM,CAACZ,OAAO,CAACS,MAAM,GAAG,CAAC;IAC9D;EACF,CAAC,CAAC;EAEF,MAAMK,YAAY,GAAIC,QAAQ,IAAK;IACjCpB,UAAU,CAACD,OAAO,CAACsB,GAAG,CAACJ,MAAM,IAC3BA,MAAM,CAAChB,EAAE,KAAKmB,QAAQ,GAClB;MAAE,GAAGH,MAAM;MAAEb,MAAM,EAAE,CAACa,MAAM,CAACb;IAAO,CAAC,GACrCa,MACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMC,WAAW,GAAG,UAAUV,YAAY,CAACK,OAAO,EAAE;IACpDL,YAAY,CAACK,OAAO,IAAI,CAAC;IACzBH,aAAa,CAACG,OAAO,CAACK,WAAW,CAAC,GAAG,CAAC;IAEtC,MAAMC,SAAS,GAAG;MAChBvB,EAAE,EAAEsB,WAAW;MACfrB,KAAK,EAAE,YAAY;MACnBC,WAAW,EAAE,oBAAoB;MACjCC,MAAM,EAAE,IAAI;MACZC,OAAO,EAAE;IACX,CAAC;IAEDL,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAEyB,SAAS,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAIL,QAAQ,IAAK;IACjCpB,UAAU,CAACD,OAAO,CAAC2B,MAAM,CAACT,MAAM,IAAIA,MAAM,CAAChB,EAAE,KAAKmB,QAAQ,CAAC,CAAC;EAC9D,CAAC;EAED,MAAMO,UAAU,GAAGA,CAACP,QAAQ,EAAEQ,KAAK,EAAEC,KAAK,KAAK;IAC7C7B,UAAU,CAACD,OAAO,CAACsB,GAAG,CAACJ,MAAM,IAC3BA,MAAM,CAAChB,EAAE,KAAKmB,QAAQ,GAClB;MAAE,GAAGH,MAAM;MAAE,CAACW,KAAK,GAAGC;IAAM,CAAC,GAC7BZ,MACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMa,SAAS,GAAIV,QAAQ,IAAK;IAC9BV,gBAAgB,CAAC;MACfT,EAAE,EAAE,EAAE;MACNC,KAAK,EAAE,EAAE;MACTI,QAAQ,EAAE;IACZ,CAAC,CAAC;IACFM,kBAAkB,CAACQ,QAAQ,CAAC;IAC5BZ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMuB,UAAU,GAAGA,CAACC,MAAM,EAAEZ,QAAQ,KAAK;IACvCV,gBAAgB,CAAC;MAAE,GAAGsB;IAAO,CAAC,CAAC;IAC/BpB,kBAAkB,CAACQ,QAAQ,CAAC;IAC5BZ,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMyB,YAAY,GAAGA,CAACC,QAAQ,EAAEd,QAAQ,KAAK;IAC3CpB,UAAU,CAACD,OAAO,CAACsB,GAAG,CAACJ,MAAM,IAC3BA,MAAM,CAAChB,EAAE,KAAKmB,QAAQ,GAClB;MACE,GAAGH,MAAM;MACTZ,OAAO,EAAEY,MAAM,CAACZ,OAAO,CAACqB,MAAM,CAACM,MAAM,IAAIA,MAAM,CAAC/B,EAAE,KAAKiC,QAAQ;IACjE,CAAC,GACDjB,MACN,CAAC,CAAC;EACJ,CAAC;EAED,MAAMkB,UAAU,GAAIH,MAAM,IAAK;IAC7B,IAAI,CAACvB,aAAa,CAACR,EAAE,EAAE;MACrB;MACA,MAAMmC,WAAW,GAAG,UAAUzB,eAAe,CAAC0B,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAItB,aAAa,CAACG,OAAO,CAACP,eAAe,CAAC,EAAE;MACvGI,aAAa,CAACG,OAAO,CAACP,eAAe,CAAC,IAAI,CAAC;MAE3CX,UAAU,CAACD,OAAO,CAACsB,GAAG,CAACJ,MAAM,IAC3BA,MAAM,CAAChB,EAAE,KAAKU,eAAe,GACzB;QACE,GAAGM,MAAM;QACTZ,OAAO,EAAE,CAAC,GAAGY,MAAM,CAACZ,OAAO,EAAE;UAAE,GAAG2B,MAAM;UAAE/B,EAAE,EAAEmC;QAAY,CAAC;MAC7D,CAAC,GACDnB,MACN,CAAC,CAAC;IACJ,CAAC,MAAM;MACL;MACAjB,UAAU,CAACD,OAAO,CAACsB,GAAG,CAACJ,MAAM,IAC3BA,MAAM,CAAChB,EAAE,KAAKU,eAAe,GACzB;QACE,GAAGM,MAAM;QACTZ,OAAO,EAAEY,MAAM,CAACZ,OAAO,CAACgB,GAAG,CAACiB,CAAC,IAC3BA,CAAC,CAACrC,EAAE,KAAK+B,MAAM,CAAC/B,EAAE,GAAG+B,MAAM,GAAGM,CAChC;MACF,CAAC,GACDrB,MACN,CAAC,CAAC;IACJ;IACAT,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,MAAM+B,aAAa,GAAIC,MAAM,IAAK;IAChC,MAAM;MAAEC,WAAW;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGH,MAAM;;IAE5C;IACA,IAAI,CAACC,WAAW,IACXA,WAAW,CAACG,WAAW,KAAKF,MAAM,CAACE,WAAW,IAC9CH,WAAW,CAACI,KAAK,KAAKH,MAAM,CAACG,KAAM,EAAE;MACxC;IACF;;IAEA;IACA,IAAIF,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMG,gBAAgB,GAAGC,KAAK,CAACC,IAAI,CAACjD,OAAO,CAAC;MAC5C,MAAM,CAACkD,OAAO,CAAC,GAAGH,gBAAgB,CAACI,MAAM,CAACR,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;MAC1DC,gBAAgB,CAACI,MAAM,CAACT,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEI,OAAO,CAAC;MACtDjD,UAAU,CAAC8C,gBAAgB,CAAC;MAC5B;IACF;;IAEA;IACA,IAAIH,IAAI,KAAK,QAAQ,EAAE;MACrB,MAAMQ,cAAc,GAAGT,MAAM,CAACE,WAAW;MACzC,MAAMQ,YAAY,GAAGX,WAAW,CAACG,WAAW;;MAE5C;MACA,MAAMS,UAAU,GAAG,CAAC,GAAGtD,OAAO,CAAC;;MAE/B;MACA,MAAMuD,YAAY,GAAGD,UAAU,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvD,EAAE,KAAKkD,cAAc,CAAC;MAClE,MAAMM,UAAU,GAAGJ,UAAU,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACvD,EAAE,KAAKmD,YAAY,CAAC;;MAE9D;MACA,MAAMM,aAAa,GAAG,CAAC,GAAGJ,YAAY,CAACjD,OAAO,CAAC;MAC/C,MAAMsD,WAAW,GAAGR,cAAc,KAAKC,YAAY,GACjDM,aAAa,GAAG,CAAC,GAAGD,UAAU,CAACpD,OAAO,CAAC;;MAEzC;MACA,MAAM,CAACuD,WAAW,CAAC,GAAGF,aAAa,CAACR,MAAM,CAACR,MAAM,CAACG,KAAK,EAAE,CAAC,CAAC;MAE3D,IAAIM,cAAc,KAAKC,YAAY,EAAE;QACnC;QACAM,aAAa,CAACR,MAAM,CAACT,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEe,WAAW,CAAC;QACvDN,YAAY,CAACjD,OAAO,GAAGqD,aAAa;MACtC,CAAC,MAAM;QACL;QACAC,WAAW,CAACT,MAAM,CAACT,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEe,WAAW,CAAC;QACrDN,YAAY,CAACjD,OAAO,GAAGqD,aAAa;QACpCD,UAAU,CAACpD,OAAO,GAAGsD,WAAW;MAClC;MAEA3D,UAAU,CAACqD,UAAU,CAAC;IACxB;EACF,CAAC;EAED,oBACEzD,OAAA;IAAKiE,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChClE,OAAA;MAAKiE,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BlE,OAAA;QAAIiE,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDtE,OAAA;QAAGiE,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAA+C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAENtE,OAAA,CAACL,eAAe;MAAC4E,SAAS,EAAE5B,aAAc;MAAAuB,QAAA,eACxClE,OAAA,CAACJ,SAAS;QAACoD,WAAW,EAAC,SAAS;QAACD,IAAI,EAAC,QAAQ;QAAAmB,QAAA,EAC1CM,QAAQ,iBACRxE,OAAA;UACEiE,SAAS,EAAC,mBAAmB;UAAA,GACzBO,QAAQ,CAACC,cAAc;UAC3BC,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAAT,QAAA,GAEtB/D,OAAO,CAACe,MAAM,KAAK,CAAC,gBACnBlB,OAAA;YAAKiE,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAE7B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,GAENnE,OAAO,CAACsB,GAAG,CAAC,CAACJ,MAAM,EAAEuD,WAAW,kBAC9B5E,OAAA,CAACH,MAAM;YAELwB,MAAM,EAAEA,MAAO;YACfuD,WAAW,EAAEA,WAAY;YACzBC,cAAc,EAAEtD,YAAa;YAC7BuD,YAAY,EAAE/C,UAAW;YACzBgD,cAAc,EAAElD,YAAa;YAC7BmD,WAAW,EAAE9C,SAAU;YACvB+C,YAAY,EAAE9C,UAAW;YACzB+C,cAAc,EAAE7C;UAAa,GARxBhB,MAAM,CAAChB,EAAE;YAAA8D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASf,CACF,CACF,EACAE,QAAQ,CAACW,WAAW,eAErBnF,OAAA;YACEoF,OAAO,EAAE1D,YAAa;YACtBuC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAE1BlE,OAAA,CAACN,IAAI;cAACuE,SAAS,EAAC,WAAW;cAACoB,IAAI,EAAE;YAAG;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,kBAE1C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MACN;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,EAEjB3D,WAAW,iBACVX,OAAA,CAACF,WAAW;MACVe,aAAa,EAAEA,aAAc;MAC7ByE,MAAM,EAAE/C,UAAW;MACnBgD,OAAO,EAAEA,CAAA,KAAM3E,cAAc,CAAC,KAAK;IAAE;MAAAuD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpE,EAAA,CAjPID,gBAAgB;AAAAuF,EAAA,GAAhBvF,gBAAgB;AAmPtB,eAAeA,gBAAgB;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}