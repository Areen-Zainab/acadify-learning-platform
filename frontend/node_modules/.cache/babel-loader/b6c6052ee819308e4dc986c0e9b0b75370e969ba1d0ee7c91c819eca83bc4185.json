{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hafsa\\\\source\\\\repos\\\\web-project\\\\frontend\\\\src\\\\pages\\\\teacher\\\\MyCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TeacherLayout from '../../components/teacher/sidebar';\nimport { Calendar, ChevronLeft, ChevronRight, List, Grid, Clock, BookOpen } from 'lucide-react';\nimport '../../css/teacher/calendar.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst deadlinesData = [{\n  id: 1,\n  title: 'Midterm Grades Due',\n  date: '2025-04-28',\n  course: 'CS101'\n}, {\n  id: 2,\n  title: 'Final Project Submissions',\n  date: '2025-05-15',\n  course: 'MATH202'\n}, {\n  id: 3,\n  title: 'Department Meeting',\n  date: '2025-04-26',\n  course: 'Admin'\n}, {\n  id: 4,\n  title: 'Student Evaluations Due',\n  date: '2025-05-10',\n  course: 'ENG105'\n}, {\n  id: 5,\n  title: 'Curriculum Review',\n  date: '2025-05-05',\n  course: 'Admin'\n}, {\n  id: 6,\n  title: 'Lab Reports Grading',\n  date: '2025-04-30',\n  course: 'PHY201'\n}, {\n  id: 7,\n  title: 'Parent-Teacher Conference',\n  date: '2025-05-12',\n  course: 'Admin'\n}, {\n  id: 8,\n  title: 'Research Proposal Deadline',\n  date: '2025-05-20',\n  course: 'BIO303'\n}];\n\n// Generate calendar days\nconst generateCalendarDays = (year, month) => {\n  const firstDay = new Date(year, month, 1);\n  const lastDay = new Date(year, month + 1, 0);\n  const days = [];\n  const startingDayOfWeek = firstDay.getDay();\n\n  // Add empty slots for days before the 1st of the month\n  for (let i = 0; i < startingDayOfWeek; i++) {\n    days.push({\n      day: null,\n      isCurrentMonth: false\n    });\n  }\n\n  // Add days of the current month\n  for (let day = 1; day <= lastDay.getDate(); day++) {\n    days.push({\n      day,\n      isCurrentMonth: true\n    });\n  }\n  return days;\n};\n\n// Course color mapping\nconst courseColors = {\n  'CS101': 'blue',\n  'MATH202': 'green',\n  'Admin': 'purple',\n  'ENG105': 'amber',\n  'PHY201': 'red',\n  'BIO303': 'teal'\n};\nconst InstructorCalendar = () => {\n  _s();\n  const [viewMode, setViewMode] = useState('calendar'); // 'calendar' or 'list'\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [animating, setAnimating] = useState(false);\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth();\n  const calendarDays = generateCalendarDays(year, month);\n  const monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const handlePrevMonth = () => {\n    setAnimating(true);\n    setTimeout(() => {\n      setCurrentDate(new Date(year, month - 1, 1));\n      setAnimating(false);\n    }, 300);\n  };\n  const handleNextMonth = () => {\n    setAnimating(true);\n    setTimeout(() => {\n      setCurrentDate(new Date(year, month + 1, 1));\n      setAnimating(false);\n    }, 300);\n  };\n  const toggleView = mode => {\n    setAnimating(true);\n    setTimeout(() => {\n      setViewMode(mode);\n      setAnimating(false);\n    }, 300);\n  };\n\n  // Filter deadlines for the current month\n  const currentMonthDeadlines = deadlinesData.filter(deadline => {\n    const deadlineDate = new Date(deadline.date);\n    return deadlineDate.getMonth() === month && deadlineDate.getFullYear() === year;\n  });\n\n  // Get deadlines for a specific day\n  const getDeadlinesForDay = day => {\n    if (!day) return [];\n    const formattedDate = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\n    return deadlinesData.filter(deadline => deadline.date === formattedDate);\n  };\n\n  // Check if a day is today\n  const isToday = day => {\n    if (!day) return false;\n    const today = new Date();\n    return day === today.getDate() && month === today.getMonth() && year === today.getFullYear();\n  };\n\n  // Sort deadlines by date\n  const sortedDeadlines = [...deadlinesData].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  // Group deadlines by month for list view\n  const groupedDeadlines = sortedDeadlines.reduce((acc, deadline) => {\n    const date = new Date(deadline.date);\n    const monthYear = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\n    if (!acc[monthYear]) {\n      acc[monthYear] = [];\n    }\n    acc[monthYear].push(deadline);\n    return acc;\n  }, {});\n\n  // Get formatted date\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n  };\n\n  // Get days remaining\n  const getDaysRemaining = dateString => {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const targetDate = new Date(dateString);\n    const diffTime = targetDate.getTime() - today.getTime();\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n    if (diffDays === 0) return 'Today';\n    if (diffDays === 1) return 'Tomorrow';\n    if (diffDays < 0) return `${Math.abs(diffDays)} days ago`;\n    return `${diffDays} days remaining`;\n  };\n  return /*#__PURE__*/_jsxDEV(TeacherLayout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructor-calendar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-title\",\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            size: 24,\n            className: \"calendar-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Instructor Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-toggle\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleView('calendar'),\n            className: `toggle-btn ${viewMode === 'calendar' ? 'active' : ''}`,\n            \"aria-label\": \"Calendar View\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Calendar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleView('list'),\n            className: `toggle-btn ${viewMode === 'list' ? 'active' : ''}`,\n            \"aria-label\": \"List View\",\n            children: [/*#__PURE__*/_jsxDEV(List, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"List\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-content ${animating ? 'fade-out' : 'fade-in'}`,\n        children: viewMode === 'calendar' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"month-navigation\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handlePrevMonth,\n              className: \"nav-btn\",\n              \"aria-label\": \"Previous Month\",\n              children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"month-title\",\n              children: [monthNames[month], \" \", year]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleNextMonth,\n              className: \"nav-btn\",\n              \"aria-label\": \"Next Month\",\n              children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weekday-headers\",\n              children: weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weekday\",\n                children: day\n              }, day, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"calendar-days\",\n              children: calendarDays.map((day, index) => {\n                const dayDeadlines = day.day ? getDeadlinesForDay(day.day) : [];\n                const isTodayClass = isToday(day.day) ? 'is-today' : '';\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `calendar-day ${!day.isCurrentMonth ? 'other-month' : ''} ${isTodayClass}`,\n                  children: day.day && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"day-number\",\n                      children: day.day\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"day-events\",\n                      children: dayDeadlines.map(deadline => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `event-item ${courseColors[deadline.course]}`,\n                        title: `${deadline.title} (${deadline.course})`,\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"event-title\",\n                          children: deadline.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"event-course\",\n                          children: deadline.course\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 217,\n                          columnNumber: 35\n                        }, this)]\n                      }, deadline.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 33\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"list-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"All Upcoming Deadlines\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"deadlines-list\",\n            children: Object.entries(groupedDeadlines).length > 0 ? Object.entries(groupedDeadlines).map(([monthYear, deadlines]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"month-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"month-heading\",\n                children: monthYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-items\",\n                children: deadlines.map(deadline => {\n                  const deadlineDate = new Date(deadline.date);\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"deadline-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `deadline-date ${courseColors[deadline.course]}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date-day\",\n                        children: deadlineDate.getDate()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"date-month\",\n                        children: monthNames[deadlineDate.getMonth()].substring(0, 3)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 247,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"deadline-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        className: \"deadline-title\",\n                        children: deadline.title\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"deadline-meta\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"deadline-course\",\n                          children: [/*#__PURE__*/_jsxDEV(BookOpen, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 253,\n                            columnNumber: 37\n                          }, this), deadline.course]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 252,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"deadline-countdown\",\n                          children: [/*#__PURE__*/_jsxDEV(Clock, {\n                            size: 14\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 257,\n                            columnNumber: 37\n                          }, this), getDaysRemaining(deadline.date)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 256,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 249,\n                      columnNumber: 31\n                    }, this)]\n                  }, deadline.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 23\n              }, this)]\n            }, monthYear, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"no-deadlines\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"No upcoming deadlines found.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"monthly-summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"This Month's Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), currentMonthDeadlines.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-list\",\n          children: currentMonthDeadlines.map(deadline => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `summary-indicator ${courseColors[deadline.course]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-title\",\n                children: deadline.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"summary-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-course\",\n                  children: deadline.course\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"summary-date\",\n                  children: formatDate(deadline.date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `status-badge ${getDaysRemaining(deadline.date) === 'Today' ? 'urgent' : ''}`,\n                children: getDaysRemaining(deadline.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this)]\n          }, deadline.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"no-deadlines\",\n          children: \"No deadlines for this month.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructorCalendar, \"V1SUzXRyIQxssuXBy64CoQe9CbY=\");\n_c = InstructorCalendar;\nexport default InstructorCalendar;\nvar _c;\n$RefreshReg$(_c, \"InstructorCalendar\");","map":{"version":3,"names":["React","useState","useEffect","TeacherLayout","Calendar","ChevronLeft","ChevronRight","List","Grid","Clock","BookOpen","jsxDEV","_jsxDEV","Fragment","_Fragment","deadlinesData","id","title","date","course","generateCalendarDays","year","month","firstDay","Date","lastDay","days","startingDayOfWeek","getDay","i","push","day","isCurrentMonth","getDate","courseColors","InstructorCalendar","_s","viewMode","setViewMode","currentDate","setCurrentDate","animating","setAnimating","getFullYear","getMonth","calendarDays","monthNames","weekdays","handlePrevMonth","setTimeout","handleNextMonth","toggleView","mode","currentMonthDeadlines","filter","deadline","deadlineDate","getDeadlinesForDay","formattedDate","String","padStart","isToday","today","sortedDeadlines","sort","a","b","groupedDeadlines","reduce","acc","monthYear","formatDate","dateString","getDaysRemaining","setHours","targetDate","diffTime","getTime","diffDays","Math","ceil","abs","children","className","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","dayDeadlines","isTodayClass","Object","entries","length","deadlines","substring","_c","$RefreshReg$"],"sources":["C:/Users/Hafsa/source/repos/web-project/frontend/src/pages/teacher/MyCalendar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TeacherLayout from '../../components/teacher/sidebar';\r\nimport { Calendar, ChevronLeft, ChevronRight, List, Grid, Clock, BookOpen } from 'lucide-react';\r\nimport '../../css/teacher/calendar.css';\r\n\r\nconst deadlinesData = [\r\n  { id: 1, title: 'Midterm Grades Due', date: '2025-04-28', course: 'CS101' },\r\n  { id: 2, title: 'Final Project Submissions', date: '2025-05-15', course: 'MATH202' },\r\n  { id: 3, title: 'Department Meeting', date: '2025-04-26', course: 'Admin' },\r\n  { id: 4, title: 'Student Evaluations Due', date: '2025-05-10', course: 'ENG105' },\r\n  { id: 5, title: 'Curriculum Review', date: '2025-05-05', course: 'Admin' },\r\n  { id: 6, title: 'Lab Reports Grading', date: '2025-04-30', course: 'PHY201' },\r\n  { id: 7, title: 'Parent-Teacher Conference', date: '2025-05-12', course: 'Admin' },\r\n  { id: 8, title: 'Research Proposal Deadline', date: '2025-05-20', course: 'BIO303' }\r\n];\r\n\r\n// Generate calendar days\r\nconst generateCalendarDays = (year, month) => {\r\n  const firstDay = new Date(year, month, 1);\r\n  const lastDay = new Date(year, month + 1, 0);\r\n  \r\n  const days = [];\r\n  const startingDayOfWeek = firstDay.getDay();\r\n  \r\n  // Add empty slots for days before the 1st of the month\r\n  for (let i = 0; i < startingDayOfWeek; i++) {\r\n    days.push({ day: null, isCurrentMonth: false });\r\n  }\r\n  \r\n  // Add days of the current month\r\n  for (let day = 1; day <= lastDay.getDate(); day++) {\r\n    days.push({ day, isCurrentMonth: true });\r\n  }\r\n  \r\n  return days;\r\n};\r\n\r\n// Course color mapping\r\nconst courseColors = {\r\n  'CS101': 'blue',\r\n  'MATH202': 'green',\r\n  'Admin': 'purple',\r\n  'ENG105': 'amber',\r\n  'PHY201': 'red',\r\n  'BIO303': 'teal'\r\n};\r\n\r\nconst InstructorCalendar = () => {\r\n  const [viewMode, setViewMode] = useState('calendar'); // 'calendar' or 'list'\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [animating, setAnimating] = useState(false);\r\n  \r\n  const year = currentDate.getFullYear();\r\n  const month = currentDate.getMonth();\r\n  const calendarDays = generateCalendarDays(year, month);\r\n  \r\n  const monthNames = [\r\n    'January', 'February', 'March', 'April', \r\n    'May', 'June', 'July', 'August', \r\n    'September', 'October', 'November', 'December'\r\n  ];\r\n  \r\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n  \r\n  const handlePrevMonth = () => {\r\n    setAnimating(true);\r\n    setTimeout(() => {\r\n      setCurrentDate(new Date(year, month - 1, 1));\r\n      setAnimating(false);\r\n    }, 300);\r\n  };\r\n  \r\n  const handleNextMonth = () => {\r\n    setAnimating(true);\r\n    setTimeout(() => {\r\n      setCurrentDate(new Date(year, month + 1, 1));\r\n      setAnimating(false);\r\n    }, 300);\r\n  };\r\n\r\n  const toggleView = (mode) => {\r\n    setAnimating(true);\r\n    setTimeout(() => {\r\n      setViewMode(mode);\r\n      setAnimating(false);\r\n    }, 300);\r\n  };\r\n\r\n  // Filter deadlines for the current month\r\n  const currentMonthDeadlines = deadlinesData.filter(deadline => {\r\n    const deadlineDate = new Date(deadline.date);\r\n    return deadlineDate.getMonth() === month && deadlineDate.getFullYear() === year;\r\n  });\r\n\r\n  // Get deadlines for a specific day\r\n  const getDeadlinesForDay = (day) => {\r\n    if (!day) return [];\r\n    const formattedDate = `${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`;\r\n    return deadlinesData.filter(deadline => deadline.date === formattedDate);\r\n  };\r\n\r\n  // Check if a day is today\r\n  const isToday = (day) => {\r\n    if (!day) return false;\r\n    const today = new Date();\r\n    return day === today.getDate() && month === today.getMonth() && year === today.getFullYear();\r\n  };\r\n\r\n  // Sort deadlines by date\r\n  const sortedDeadlines = [...deadlinesData].sort((a, b) => new Date(a.date) - new Date(b.date));\r\n  \r\n  // Group deadlines by month for list view\r\n  const groupedDeadlines = sortedDeadlines.reduce((acc, deadline) => {\r\n    const date = new Date(deadline.date);\r\n    const monthYear = `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\r\n    \r\n    if (!acc[monthYear]) {\r\n      acc[monthYear] = [];\r\n    }\r\n    \r\n    acc[monthYear].push(deadline);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Get formatted date\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return `${monthNames[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\r\n  };\r\n\r\n  // Get days remaining\r\n  const getDaysRemaining = (dateString) => {\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    \r\n    const targetDate = new Date(dateString);\r\n    const diffTime = targetDate.getTime() - today.getTime();\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n    \r\n    if (diffDays === 0) return 'Today';\r\n    if (diffDays === 1) return 'Tomorrow';\r\n    if (diffDays < 0) return `${Math.abs(diffDays)} days ago`;\r\n    return `${diffDays} days remaining`;\r\n  };\r\n\r\n  return (\r\n    <TeacherLayout>\r\n      <div className=\"instructor-calendar\">\r\n        <div className=\"calendar-header\">\r\n          <div className=\"calendar-title\">\r\n            <Calendar size={24} className=\"calendar-icon\" />\r\n            <h1>Instructor Calendar</h1>\r\n          </div>\r\n          <div className=\"view-toggle\">\r\n            <button \r\n              onClick={() => toggleView('calendar')} \r\n              className={`toggle-btn ${viewMode === 'calendar' ? 'active' : ''}`}\r\n              aria-label=\"Calendar View\"\r\n            >\r\n              <Grid size={20} />\r\n              <span>Calendar</span>\r\n            </button>\r\n            <button \r\n              onClick={() => toggleView('list')} \r\n              className={`toggle-btn ${viewMode === 'list' ? 'active' : ''}`}\r\n              aria-label=\"List View\"\r\n            >\r\n              <List size={20} />\r\n              <span>List</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className={`calendar-content ${animating ? 'fade-out' : 'fade-in'}`}>\r\n          {viewMode === 'calendar' ? (\r\n            <div className=\"calendar-view\">\r\n              <div className=\"month-navigation\">\r\n                <button onClick={handlePrevMonth} className=\"nav-btn\" aria-label=\"Previous Month\">\r\n                  <ChevronLeft size={20} />\r\n                </button>\r\n                <h2 className=\"month-title\">{monthNames[month]} {year}</h2>\r\n                <button onClick={handleNextMonth} className=\"nav-btn\" aria-label=\"Next Month\">\r\n                  <ChevronRight size={20} />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"calendar-grid\">\r\n                <div className=\"weekday-headers\">\r\n                  {weekdays.map(day => (\r\n                    <div key={day} className=\"weekday\">\r\n                      {day}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n\r\n                <div className=\"calendar-days\">\r\n                  {calendarDays.map((day, index) => {\r\n                    const dayDeadlines = day.day ? getDeadlinesForDay(day.day) : [];\r\n                    const isTodayClass = isToday(day.day) ? 'is-today' : '';\r\n                    \r\n                    return (\r\n                      <div \r\n                        key={index} \r\n                        className={`calendar-day ${!day.isCurrentMonth ? 'other-month' : ''} ${isTodayClass}`}\r\n                      >\r\n                        {day.day && (\r\n                          <>\r\n                            <span className=\"day-number\">{day.day}</span>\r\n                            <div className=\"day-events\">\r\n                              {dayDeadlines.map(deadline => (\r\n                                <div \r\n                                  key={deadline.id} \r\n                                  className={`event-item ${courseColors[deadline.course]}`}\r\n                                  title={`${deadline.title} (${deadline.course})`}\r\n                                >\r\n                                  <span className=\"event-title\">{deadline.title}</span>\r\n                                  <span className=\"event-course\">{deadline.course}</span>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"list-view\">\r\n              <div className=\"list-header\">\r\n                <h2>All Upcoming Deadlines</h2>\r\n              </div>\r\n              \r\n              <div className=\"deadlines-list\">\r\n                {Object.entries(groupedDeadlines).length > 0 ? (\r\n                  Object.entries(groupedDeadlines).map(([monthYear, deadlines]) => (\r\n                    <div key={monthYear} className=\"month-group\">\r\n                      <h3 className=\"month-heading\">{monthYear}</h3>\r\n                      <div className=\"month-items\">\r\n                        {deadlines.map(deadline => {\r\n                          const deadlineDate = new Date(deadline.date);\r\n                          return (\r\n                            <div key={deadline.id} className=\"deadline-item\">\r\n                              <div className={`deadline-date ${courseColors[deadline.course]}`}>\r\n                                <span className=\"date-day\">{deadlineDate.getDate()}</span>\r\n                                <span className=\"date-month\">{monthNames[deadlineDate.getMonth()].substring(0, 3)}</span>\r\n                              </div>\r\n                              <div className=\"deadline-details\">\r\n                                <h4 className=\"deadline-title\">{deadline.title}</h4>\r\n                                <div className=\"deadline-meta\">\r\n                                  <span className=\"deadline-course\">\r\n                                    <BookOpen size={14} />\r\n                                    {deadline.course}\r\n                                  </span>\r\n                                  <span className=\"deadline-countdown\">\r\n                                    <Clock size={14} />\r\n                                    {getDaysRemaining(deadline.date)}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        })}\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"no-deadlines\">\r\n                    <p>No upcoming deadlines found.</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Monthly Summary Section */}\r\n        <div className=\"monthly-summary\">\r\n          <h2>This Month's Overview</h2>\r\n          {currentMonthDeadlines.length > 0 ? (\r\n            <div className=\"summary-list\">\r\n              {currentMonthDeadlines.map(deadline => (\r\n                <div key={deadline.id} className=\"summary-item\">\r\n                  <div className={`summary-indicator ${courseColors[deadline.course]}`}></div>\r\n                  <div className=\"summary-content\">\r\n                    <div className=\"summary-title\">{deadline.title}</div>\r\n                    <div className=\"summary-details\">\r\n                      <span className=\"summary-course\">{deadline.course}</span>\r\n                      <span className=\"summary-date\">{formatDate(deadline.date)}</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"summary-status\">\r\n                    <span className={`status-badge ${getDaysRemaining(deadline.date) === 'Today' ? 'urgent' : ''}`}>\r\n                      {getDaysRemaining(deadline.date)}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"no-deadlines\">No deadlines for this month.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </TeacherLayout>\r\n  );\r\n};\r\n\r\nexport default InstructorCalendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}